[entity-name]
nixie-tube=Nixie Tube
nixie-tube-alpha=Alpha-Nixie Tube
nixie-tube-small=Small Nixie Tubes

[virtual-signal-name]
signal-at=Signal @
signal-curopen=Signal {
signal-curclose=Signal }
signal-number-type=Signal Number Type
signal-hex=Signal Hex

[technology-name]
cathodes=Cathodes

[mod-setting-name]
nixie-tube-slashed-zero=Slashed Zero
nixie-tube-update-speed-alpha=Alpha Nixie update speed
nixie-tube-update-speed-numeric=Numeric Nixie update speed

[mod-setting-description]
nixie-tube-update-speed-alpha=Sets the number of Alpha Nixies updated per tick. Higher = faster updates
nixie-tube-update-speed-numeric=Sets the number of Numeric Nixie groups updated per tick. Higher = faster updates

[tips-and-tricks-item-name]
nixie-tubes=Nixie Tubes
nixie-tubes-alpha=Alpha Nixie Tubes
nixie-tubes-color=Nixie Tubes Color Signals
nixie-tubes-formatting=Nixie Tubes Formatting Signals

[tips-and-tricks-item-description]
nixie-tubes=[entity=nixie-tube] and [entity=nixie-tube-small] can be used to display numeric values from the circuit network. Nixie Tubes automatically join with adjacent units to the left to display additional digits. Simply connect the rightmost digit and select a signal.
nixie-tubes-alpha=[entity=nixie-tube-alpha] can be used to build text displays. Each unit must recieve only one character signal, and will display the corresponding symbol. If multiple signals are received, an error symbol will be displayed.
nixie-tubes-color=All Nixie Tube types support receiving a color signal alongside the numeric value or character signal, when "use colors" is selected. The color will be applied with the same priority as on [entity=small-lamp].
nixie-tubes-formatting=[entity=nixie-tube] and [entity=nixie-tube-small] support receiving a formatting signal alongside the numeric value signal, similar to how colors are applied.\n[virtual-signal=signal-hex] can be used to display the value in hexadecimal.\n[virtual-signal=signal-number-type] can be sent with various values to re-interpret the signal value:\n[virtual-signal=signal-number-type]=1 single-precision floating point\n[virtual-signal=signal-number-type]=2 double-precision floating point - the high half is read from the [item=green-wire], and the low half from [item=red-wire].\n[virtual-signal=signal-number-type]=-1 unsigned integer\n[virtual-signal=signal-number-type]=4, 8, 16, 32, ... 1073741824 binary fixed point\n[virtual-signal=signal-number-type]=-4, -8, -16, -32, ... -2147483648 unsigned binary fixed point\n[virtual-signal=signal-number-type]=10, 100, 1000, ... 1000000000 decimal fixed point\n[virtual-signal=signal-number-type]=-10, -100, -1000, ... -1000000000 unsigned decimal fixed point\nAny unknown values of [virtual-signal=signal-number-type] are ignored and the value is treated as a signed integer


[virtual-signal-description]
signal-hex=Used with [entity=nixie-tube] and [entity=nixie-tube-small] to display numbers in hexadecimal
signal-number-type=Used with [entity=nixie-tube] and [entity=nixie-tube-small] to display different kinds of numbers:\n1 : single-precision floating point\n2 : double-precision floating point - high half [item=green-wire], low half [item=red-wire]\n-1 : unsigned integer\n4, 8, 16, 32, ... : binary fixed point\n-4, -8, -16, -32, ... : unsigned binary fixed point\n10, 100, 1000, ... : decimal fixed point\n-10, -100, -1000, ... : unsigned decimal fixed point\n
